version: '3.8'

services:
  app:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./app:/app
    command: sh -c "npm install && npm run migrate && npm start"
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dbuser:dbpass@database:5432/demoapp
      - MIGRATION_DIR=/app/migrations
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped

  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=demoapp
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=dbpass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./scripts:/scripts:ro
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d demoapp"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  migrate:
    image: migrate/migrate:v4.16.2
    profiles: ["tools"]
    volumes:
      - ./migrations:/migrations:ro
    environment:
      - DATABASE_URL=postgresql://dbuser:dbpass@database:5432/demoapp?sslmode=disable
    depends_on:
      database:
        condition: service_healthy
    command: ["-path", "/migrations", "-database", "postgresql://dbuser:dbpass@database:5432/demoapp?sslmode=disable"]

  pgadmin:
    image: dpage/pgadmin4:7
    profiles: ["admin"]
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database

volumes:
  db_data:
    driver: local
  pgadmin_data:
    driver: local